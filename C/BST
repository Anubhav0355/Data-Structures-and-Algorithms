#include <stdio.h>
#include <stdlib.h>
typedef struct node{
    struct node *left;
    struct node *right;
    int val;
}node;
int ct=0;
node *create(int x)
{
    node *temp=(node*)malloc(sizeof(node));
    temp->val=x;
    temp->left=temp->right=NULL;
    return temp;
}

node *insert(node *root,int x)
{
    if(root==NULL)
        return create(x);
    if(x<root->val)
        root->left=insert(root->left,x);
    else
        root->right=insert(root->right,x);
    return root;
}
void preorder(node *root)
{
    if(root==NULL)
        return;
    printf("%d ",root->val);
    preorder(root->left);
    preorder(root->right);
}
void inorder(node *root)
{
    if(root==NULL)
        return;
    inorder(root->left);
    printf("%d ",root->val);
    inorder(root->right);
}
void postorder(node *root)
{
    if(root==NULL)
        return;
   postorder(root->left);
   postorder(root->right);
   printf("%d ",root->val);
}
node *search(node *root,int x)
{
    ct++;
    if(root==NULL || root->val==x) 
        return root;
    if(root->val>x)
        return search(root->left,x);
    else
        return search(root->right,x);
}
node *inorderSuccesor(node *root)
{
    node *temp=root;
    while(temp && temp->left)
    {
        temp=temp->left;
    }
    return temp;
}
node *deleteNode(node *root,int x)
{
    if(root==NULL)return root;
    if(root->val>x)
        root->left=deleteNode(root->left,x);
    else if(root->val<x)
        root->right=deleteNode(root->right,x);
    else
    {
        if(root->left==NULL)
        {
            node *temp=root->right;
            free(root);
            return temp;
        }
        else if(root->right==NULL)
        {
            node *temp=root->left;
            free(root);
            return temp;
        }
        else
        {
            node *temp=inorderSuccesor(root->right);
            root->val=temp->val;
            root->right=deleteNode(root->right,x);
        }
    }
    return root;
}



int main()
{

    
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif

   
   node *head=NULL;
   
 
    
    
    return 0;
}
